#! /bin/bash

git_root=`git rev-parse --show-toplevel`

syntax_errors=0
error_msg=$(mktemp /tmp/error_msg.XXXXXX)

if git rev-parse --quiet --verify HEAD > /dev/null
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# Get list of new/modified manifest and template files to check (in git index)
for puppetmodule in `git diff --cached --name-only --diff-filter=ACM | egrep '\.*.pp$|\.*.erb$|\.*.yaml$|\.*.yml$'`
do
    # Don't check empty files
    case $puppetmodule in
        *.pp )
            # Check puppet manifest syntax
            echo -e "Validate Puppet module: \033[0;32m$puppetmodule\033[0m"
            puppet parser validate --color=true $git_root/$puppetmodule > $error_msg ;;
        *.erb )
            # Check ERB template syntax
            echo -e "Validate Puppet template: \033[0;32m$puppetmodule\033[0m"
            erb -P -x -T '-' $git_root/$puppetmodule | ruby -c 2> $error_msg > /dev/null ;;
				*.yaml )
            echo -e "Validate YAML file: \033[0;32m$puppetmodule\033[0m"
					  # Check YAML file syntax
						ruby -e "require 'yaml'; YAML.parse(File.open('$puppetmodule'))" 2> $error_msg > /dev/null ;;
				*.yml )
            echo -e "Validate YAML file: \033[0;32m$puppetmodule\033[0m"
					  # Check YAML file syntax
						ruby -e "require 'yaml'; YAML.parse(File.open('$puppetmodule'))" 2> $error_msg > /dev/null ;;
    esac
    if [ $? -ne 0 ]
    then
        echo -n "$indexfile: "
        cat $error_msg
        syntax_errors=`expr $syntax_errors + 1`
    fi
done

rm -f $error_msg

if [ "$syntax_errors" -ne 0 ]
then
    echo -e "\033[0;31mError: $syntax_errors syntax errors found, aborting commit.\033[0m"
    exit 1
fi

# De-lint puppet manifests
if [ `which puppet-lint` ]; then
    for puppetmodule in `git diff --cached --name-only --diff-filter=ACM | grep \.*.pp$`; do
        echo -e "Style check for Puppet module: \033[0;32m$puppetmodule\033[0m"
        puppet-lint --no-autoloader_layout-check --fail-on-warnings --with-filename --no-80chars-check --no-double_quoted_strings-check $git_root/$puppetmodule
        RC=$?
        if [ $RC -ne 0 ]; then
            exit $RC
        fi
    done
fi

exit 0
